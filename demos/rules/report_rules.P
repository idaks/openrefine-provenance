:- compiler_options([xpp_on]).
# mode standard cpp

%#define DEBUG

#ifdef DEBUG

#mode push
#mode nostring "\""
#define DEBUG_CONTEXT(name) CURRENT_CONTEXT=name
#define DEBUG_VAR(varname) fmt_write("debug_var(%S, varname, '%S').\n", arg(CURRENT_CONTEXT, varname))
#mode pop

#else

#define DEBUG_CONTEXT(name) true
#define DEBUG_VAR(varname) true

#endif

%print_source_uri(DatasetId) :-
%    import_state(SourceUri, DatasetId, _, _),
%    writeln(SourceUri).

%print_remainder_of_row(RowId, StateId, StartingColumnId) :-
%    cell(CellId, StartingColumnId, RowId),
%    content(_, CellId, _, ValueId, nil),
%    value(ValueId, ValueText),
%    fmt_write('| %s ', ValueText).

%print_row(RowId, StateId) :-
%    first_column(StateId, FirstColumnId, _),
%    print_remainder_of_row(RowId, StateId, FirstColumnId),
%    writeln('|').

array_header_remainder(StateId, ColumnId, HeaderStartingFromNextColumn, CompleteHeader) :-
    DEBUG_CONTEXT('array_header_remainder/4'),
    DEBUG_VAR(ColumnId), DEBUG_VAR(HeaderStartingFromNextColumn),
    column_schema_at_state(ColumnSchemaId, ColumnId, StateId),
    DEBUG_VAR(ColumnSchemaId),
    column_schema(ColumnSchemaId, _, _, _, ColumnName, PrevColumnId, _),
    DEBUG_VAR(PrevColumnId),
    fmt_write_string(HeaderStartingFromCurrentColumn, "| %s %s", arg(ColumnName, HeaderStartingFromNextColumn)),
    array_header_remainder(StateId, PrevColumnId, HeaderStartingFromCurrentColumn, CompleteHeader)
    ;
    CompleteHeader = HeaderStartingFromNextColumn.

array_header(StateId, Header) :-
    DEBUG_CONTEXT('array_header/2'),
    DEBUG_VAR(StateId),
    last_column(StateId, _, ColumnSchemaId),
    column_schema(ColumnSchemaId, _, _, _, ColumnName, PrevColumnId, _),
    DEBUG_VAR(ColumnSchemaId), DEBUG_VAR(ColumnName),
    fmt_write_string(HeaderForLastColumn, "| %s |", arg(ColumnName)),
    array_header_remainder(StateId, PrevColumnId, HeaderForLastColumn, Header).
